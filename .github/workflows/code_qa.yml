name: Python QA

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Test
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      #----------------------------------------------
      #       load cached Poetry installation
      #----------------------------------------------
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install root project
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction

      #----------------------------------------------
      # run pre-commit hooks
      #----------------------------------------------
      - name: Run pre-commit hooks
        run: |
          poetry run pre-commit install
          poetry run pre-commit run -a

      #----------------------------------------------
      # run unit tests
      #----------------------------------------------
      - name: Run unit tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
          ImageFormat: ${{ env.IMAGEFORMAT}}
          MaxZoom: ${{ env.MAXZOOM }}
          MinZoom: ${{ env.MINZOOM }}
          DownscaleMaxZoom: ${{ env.DOWNSCALEMAXZOOM }}
          UpscaleMinZoom: ${{ env.UPSCALEMINZOOM }}
          RescalingEnabled: ${{ env.RESCALINGENABLED }}
          TileCacheBucket: ${{ env.TILECACHEBUCKET }}
        run: |
          poetry run pytest
